<#
// Copyright 2012 Max Toro Q.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#>
<#@ Template Language="C#" HostSpecific="true" #>
<#@ Assembly Name="System.Xml" #>
<#@ Import Namespace="System" #>
<#@ Import Namespace="System.IO" #>
<#@ Import Namespace="System.Xml" #>
<#@ Import Namespace="System.Xml.XPath" #>
<#
   var doc = new XPathDocument(this.Host.ResolvePath(@"Resources\AccountResources.resx"));
   XPathNavigator nav = doc.CreateNavigator();
   nav.MoveToChild(XPathNodeType.Element);

   XPathNodeIterator resources = nav.SelectChildren("data", "");
   string rootNamespace = System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("NamespaceHint").ToString();
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Globalization;
using System.Web;

namespace <#= rootNamespace #> {

   /// <summary>
   /// Provides access to localized strings used by MvcAccount.
   /// </summary>
   public static class <#= Path.GetFileNameWithoutExtension(this.Host.TemplateFile) #> {
      <# foreach (XPathNavigator data in resources) { 
         string name = data.GetAttribute("name", ""); #>

      /// <summary>
      /// Looks up a localized string similar to '<#= data.SelectSingleNode("value").Value #>'.
      /// </summary>
      public static string <#= name #> { 
         get {
            return GetResource(Keys.<#= name #>);
         }
      }
      <# } #>

      static string GetResource(string resourceKey) {

         CultureInfo culture = CultureInfo.CurrentUICulture;

         return GetUserResourceString(resourceKey, culture)
            ?? Resources.AccountResources.ResourceManager.GetString(resourceKey, culture);
      }

      static string GetUserResourceString(string resourceKey, CultureInfo culture) {

         string classKey = AccountConfiguration.Instance.ResourceClassKey;

         if (!classKey.HasValue())
            return null;

         return HttpContext.GetGlobalResourceObject(classKey, resourceKey, culture) as string;
      }
      
      internal static class Keys {
         <# foreach (XPathNavigator data in resources) { 
               string name = data.GetAttribute("name", ""); 
         #> public const string <#= name #> = "<#= name #>";
         <# } #>
      
      }
   }
}
