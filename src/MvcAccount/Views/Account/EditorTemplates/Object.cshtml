@if (ViewData.TemplateInfo.TemplateDepth > 1) { 
   @ViewData.ModelMetadata.SimpleDisplayText
} else {
   foreach (var prop in ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForEdit && !ViewData.TemplateInfo.Visited(pm))) {
      if (prop.HideSurroundingHtml) { 
         @Html.Editor(prop.PropertyName)
      } else {
         var editor = Html.Editor(prop.PropertyName, prop.TemplateHint);
         
         if (!MvcHtmlString.IsNullOrEmpty(editor)) {
            var isBool = prop.ModelType == typeof(bool);
         <div>
            <div>@(!isBool ? Html.Label(prop.PropertyName, prop.Description ?? prop.GetDisplayName()) : null)</div>
            <div>
            @if (isBool) {
               <label style="">@* Empty style is to avoid Chrome label[for]:after issue *@
                  @editor
                  @(prop.Description ?? prop.GetDisplayName())
               </label>
            } else {
               @editor
            }
               @Html.ValidationMessage(prop.PropertyName)
            </div>
         </div>
         }
      }
   }
}