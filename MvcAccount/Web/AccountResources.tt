<#
// Copyright 2012 Max Toro Q.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#>
<#@ Template Language="C#" HostSpecific="true" #>
<#@ Output Extension=".autogen.cs" #>
<#@ Assembly Name="System.Xml" #>
<#@ Import Namespace="System" #>
<#@ Import Namespace="System.IO" #>
<#@ Import Namespace="System.Xml" #>
<#@ Import Namespace="System.Xml.XPath" #>
<#
   var doc = new XPathDocument(this.Host.ResolvePath(@"..\Resources\AccountResources.resx"));
   XPathNavigator nav = doc.CreateNavigator();
   nav.MoveToChild(XPathNodeType.Element);

   XPathNodeIterator resources = nav.SelectChildren("data", "");
   string rootNamespace = System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("NamespaceHint").ToString();
   string indent = "   ";
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Web;

namespace <#= rootNamespace #> {
<# 
   PushIndent(indent);
#>

/// <summary>
/// Provides access to localized strings.
/// </summary>
public static partial class <#= Path.GetFileNameWithoutExtension(this.Host.TemplateFile) #> {
<# 
   PushIndent(indent);
   
   foreach (XPathNavigator data in resources) { 
      string name = data.GetAttribute("name", ""); 

      WriteLine("");
#>
/// <summary>
/// Looks up a localized string similar to '<#= data.SelectSingleNode("value").Value #>'.
/// </summary>
public static string <#= name #> {
<#
   PushIndent(indent);
   WriteLine("get { return GetResource(Keys." + name + "); }");
   PopIndent();
#>
}
<# } #>

internal static class Keys {

<# 
   PushIndent(indent);
   WriteLine("public const string");
   PushIndent(indent);
   
   bool first = true;

   foreach (XPathNavigator data in resources) { 
      string name = data.GetAttribute("name", ""); 

      if (first) {
         first = false;
      } else {
         Write(",");
         WriteLine("");
      }

      Write(name + " = \"" + name + "\"");
   }

   Write(";");
   WriteLine("");
   PopIndent();
   PopIndent();
#>
}
<# 
   PopIndent();
   WriteLine("}");
   PopIndent();
#>
}
